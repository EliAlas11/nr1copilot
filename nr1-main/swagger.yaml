openapi: 3.0.0
info:
  title: NR1 Main API
  version: 1.0.0
  description: |
    World-class video processing and user API
    
    **Security & Observability:**
    - Per-user and per-IP rate limiting on all sensitive endpoints
    - Audit logging for all sensitive actions (login, signup, feedback, analytics, video processing)
servers:
  - url: /api/v1
paths:
  /user/signup:
    post:
      summary: User signup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User created
        '409':
          description: Email already registered
  /user/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
        '401':
          description: Invalid credentials
  /user/me:
    get:
      summary: Get current user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User info
        '401':
          description: Unauthorized
  /videos/{id}:
    get:
      summary: Stream processed video
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Video stream
        '404':
          description: Not found
  /videos/sample:
    get:
      summary: Get sample video
      responses:
        '200':
          description: Sample video
        '404':
          description: Not found
  /videos/process:
    post:
      summary: Queue video processing job
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                videoId:
                  type: string
                url:
                  type: string
      responses:
        '200':
          description: Job queued
        '400':
          description: Invalid input
  /videos/job/{jobId}:
    get:
      summary: Get job status
      parameters:
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Job status
        '404':
          description: Not found
  /videos/validate:
    post:
      summary: Validate YouTube URL
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
      responses:
        '200':
          description: Validation result
        '400':
          description: Invalid input
  /videos/info/{videoId}:
    get:
      summary: Get video info
      parameters:
        - in: path
          name: videoId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Video info
        '400':
          description: Invalid video ID
  /feedback:
    post:
      summary: Submit feedback
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feedback:
                  type: string
                email:
                  type: string
      responses:
        '200':
          description: Feedback received
        '400':
          description: Invalid input
  /analytics:
    get:
      summary: Get analytics dashboard data
      responses:
        '200':
          description: Analytics data
  /i18n/languages:
    get:
      summary: List supported languages
      responses:
        '200':
          description: Supported languages
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
